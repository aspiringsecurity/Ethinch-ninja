
Contracts Deployment Addresses

Sepolia (Chain A)

   
- Deployer Address (Alice): 0x213064b9f671Bbe8b94C98283AE4D12CAB8E4f4C
- Escrow Contract: 0x3B469d926876f10cA002E5Cf20776745aAcDFd3A
- TokenA Contract: 0x7F1f595B7b47986b8B5a12731759225a2CcABfFC

Filecoin Calibration (Chain B1)
 
- Deployer Address (Bob): 0x08aDb9CC0658Bb91F57707B7B4D016312EF8c70a
- Escrow Contract: 0x6A6D7a69A302Ca8B41D7D00eD7019997854F587B
- TokenB Contract: 0x1114CC447697E1f981FD83107f3a65146aa918Cd

Starknet testnet (Chain B2)

- Starknet EscrowAddress: 0x00aa920d6d0f39225fea6e81e3b82193cbcc814c6b3541c6f6163ccf0fa1f5e4
- Starknet Utility Token Contract: 0x01d324a581d624d53b6b707092d1de5d7f4eba70546e94dee2d0367b9cbfa99b



# ETH-FIL Atomic Swap

This project enables atomic swaps of ERC20 tokens between Ethereum and Filecoin networks. It uses a trusted escrow contract to facilitate the swap, ensuring that the exchange is atomic and secure. This implementation is designed for EVM-compatible chains and does not rely on a centralized exchange.

## How It Works

The process involves two parties, Party A and Party B, who wish to swap tokens. Party A initiates the swap by deploying an escrow contract on an Ethereum-based chain (e.g., Sepolia). This contract holds the tokens to be exchanged. Party B, on a Filecoin-based chain (e.g., Filecoin Calibrationnet), interacts with a corresponding escrow contract to complete the swap.

The swap is "atomic" because it is executed as a single, indivisible transaction. If any part of the swap fails, the entire transaction is rolled back, and the tokens are returned to their original owners. This is made possible through the use of a shared secret that both parties must provide to unlock the funds.

## Getting Started


### Installation

1. **Clone the repository:**
   ```bash
   git clone https://github.com/your-username/ETH-FIL-SWAP.git
   cd ETH-FIL-SWAP
   ```

2. **Install dependencies:**
   ```bash
   npm install
   ```

3. **Set up environment variables:**

   Create a `secrets.json` file in the root directory and replacing the privatekey values with your own

## Usage

### 1. Deploy the Escrow Contracts

First, deploy the escrow contracts to both the Sepolia and Filecoin networks:

- **Deploy to Sepolia (Chain A):**
  ```bash
  npx hardhat run scripts/deploy_chain_a.js --network sepolia
  ```

- **Deploy to Filecoin (Chain B):**
  ```bash
  npx hardhat run scripts/deploy_chain_b.js --network filecoin
  ```

These scripts will deploy the `Escrow.sol` contract to each network

### 2. Fund the Escrow Contracts

After deploying the contracts, you need to fund them with the tokens to be swapped. You can do this by sending tokens to the escrow contract addresses.

### Example
To see how the swap will work simply run the below command

```bash
npx hardhat run scripts/execute_swap.js --network sepolia
```

This script will initiate the swap on the Sepolia network, which will then be reflected on the Filecoin network. 
